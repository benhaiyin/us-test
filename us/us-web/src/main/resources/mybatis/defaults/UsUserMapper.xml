<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.us.dao.UsUserMapper" >
  <resultMap id="BaseResultMap" type="com.us.model.defaults.UsUser" >
    <id column="user_id" property="userId" jdbcType="CHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="CHAR" />
    <result column="is_admin" property="isAdmin" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="disabled" property="disabled" jdbcType="CHAR" />
    <result column="company_id" property="companyId" jdbcType="CHAR" />
    <result column="qq" property="qq" jdbcType="CHAR" />
    <result column="is_delete" property="isDelete" jdbcType="BIGINT" />
    <result column="creater" property="creater" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="modifier" property="modifier" jdbcType="CHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="ver" property="ver" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, mobile, name, email, is_admin, password, disabled, company_id, qq, is_delete, 
    creater, create_time, modifier, modify_time, ver
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.us.model.defaults.UsUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from us_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from us_user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from us_user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.us.model.defaults.UsUserExample" >
    delete from us_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.us.model.defaults.UsUser" >
    insert into us_user (user_id, mobile, name, 
      email, is_admin, password, disabled, 
      company_id, qq, is_delete, creater, 
      create_time, modifier, modify_time, 
      ver)
    values (#{userId,jdbcType=CHAR}, #{mobile,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{email,jdbcType=CHAR}, #{isAdmin,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{disabled,jdbcType=CHAR}, 
      #{companyId,jdbcType=CHAR}, #{qq,jdbcType=CHAR}, #{isDelete,jdbcType=BIGINT}, #{creater,jdbcType=CHAR}, 
      #{createTime,jdbcType=CHAR}, #{modifier,jdbcType=CHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{ver,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.us.model.defaults.UsUser" >
    insert into us_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="isAdmin != null" >
        is_admin,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="ver != null" >
        ver,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="isAdmin != null" >
        #{isAdmin,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=CHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIGINT},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        #{ver,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.us.model.defaults.UsUserExample" resultType="java.lang.Integer" >
    select count(*) from us_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.us.model.defaults.UsUser" >
    update us_user
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="isAdmin != null" >
        is_admin = #{isAdmin,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=CHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=CHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ver != null" >
        ver = #{ver,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.us.model.defaults.UsUser" >
    update us_user
    set mobile = #{mobile,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      is_admin = #{isAdmin,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      disabled = #{disabled,jdbcType=CHAR},
      company_id = #{companyId,jdbcType=CHAR},
      qq = #{qq,jdbcType=CHAR},
      is_delete = #{isDelete,jdbcType=BIGINT},
      creater = #{creater,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=CHAR},
      modifier = #{modifier,jdbcType=CHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      ver = #{ver,jdbcType=BIGINT}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
</mapper>